<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MainProject.Template.Application</name>
    </assembly>
    <members>
        <member name="T:MainProject.Template.Auditing.AuditLogAndUser">
            <summary>
            A helper class to store an <see cref="P:MainProject.Template.Auditing.AuditLogAndUser.AuditLog"/> and a <see cref="P:MainProject.Template.Auditing.AuditLogAndUser.User"/> object.
            </summary>
        </member>
        <member name="T:MainProject.Template.Auditing.EntityChangeAndUser">
            <summary>
            A helper class to store an <see cref="P:MainProject.Template.Auditing.EntityChangeAndUser.EntityChange"/> and a <see cref="P:MainProject.Template.Auditing.EntityChangeAndUser.User"/> object.
            </summary>
        </member>
        <member name="F:MainProject.Template.Auditing.ExpiredAuditLogDeleterWorker.IsEnabled">
            <summary>
            Set this const field to true if you want to enable ExpiredAuditLogDeleterWorker.
            Be careful, If you enable this, all expired logs will be permanently deleted.
            </summary>
        </member>
        <member name="M:MainProject.Template.Authorization.Permissions.PermissionManagerExtensions.GetPermissionsFromNamesByValidating(Abp.Authorization.IPermissionManager,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all permissions by names.
            Throws <see cref="T:Abp.Runtime.Validation.AbpValidationException"/> if can not find any of the permission names.
            </summary>
        </member>
        <member name="T:MainProject.Template.Authorization.Roles.RoleAppService">
            <summary>
            Application service that is used by 'role management' page.
            </summary>
        </member>
        <member name="M:MainProject.Template.Authorization.Users.Delegation.UserDelegationAppService.GetActiveUserDelegations">
            <summary>
            Returns active user delegations for current user
            </summary>
            <returns></returns>
        </member>
        <member name="P:MainProject.Template.Authorization.Users.Importing.Dto.ImportUserDto.AssignedRoleNames">
            <summary>
            comma separated list
            </summary>
        </member>
        <member name="P:MainProject.Template.Authorization.Users.Importing.Dto.ImportUserDto.Exception">
            <summary>
            Can be set when reading data from excel or when importing user
            </summary>
        </member>
        <member name="T:MainProject.Template.DashboardCustomization.Dto.DashboardOutput">
            <summary>
            This class stores filtered dashboard information by user
            </summary>
        </member>
        <member name="P:MainProject.Template.Editions.MoveTenantsToAnotherEditionJobArgs.SourceEditionId">
            <summary>
            Id of the source edition to move tenants from
            </summary>
        </member>
        <member name="P:MainProject.Template.Editions.MoveTenantsToAnotherEditionJobArgs.TargetEditionId">
            <summary>
            Id of the target edition for tenants to move
            </summary>
        </member>
        <member name="P:MainProject.Template.Editions.MoveTenantsToAnotherEditionJobArgs.User">
            <summary>
            Identifier of the user who starts move operation
            </summary>
        </member>
        <member name="T:MainProject.Template.TemplateApplicationModule">
            <summary>
            Application layer module of the application.
            </summary>
        </member>
        <member name="T:MainProject.Template.TemplateAppServiceBase">
            <summary>
            Derive your application services from this class.
            </summary>
        </member>
    </members>
</doc>
